"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.CreateFolder = void 0;
const config_1 = require("../config");
const utils_1 = require("../utils");
const IO_1 = require("../utils/IO");
class CreateFolder {
    /* istanbul ignore next */
    constructor(args = {}) {
        const { 
        /* istanbul ignore next */
        config = config_1.createTemplateFolderConfig, mkdirRepo = new IO_1.MkDirPRepo(), joinRepo = new IO_1.JoinRepo(), } = args;
        this.config = config;
        this.joinRepo = joinRepo;
        this.mkdirRepo = mkdirRepo;
    }
    execute(outDir, relPath, 
    /* istanbul ignore next */
    vars = {}, 
    /* istanbul ignore next */
    number = 2) {
        return __awaiter(this, void 0, void 0, function* () {
            const path = this.joinRepo.execute(outDir, relPath);
            const realPaths = utils_1.Content.replace(path, vars, number);
            if (!this.config.dryRun) {
                this.mkdirRepo.execute(realPaths);
            }
        });
    }
}
exports.CreateFolder = CreateFolder;
//# sourceMappingURL=CreateFolder.service.js.map